2025-04-23: v2.6.0

🐞 Fixes:
- InMemoryRepository<T>: Now handles interfaces and untyped objects
- InMemoryRepository<T>: Now checks that initialisation objects have valid IDs

🎨 Improvements:
- ICommandObject: Added generic overloads for Execute(TContext)

🎁 New features:
- Added IChartData interfaces to support basic charts & graphs
- Added ICalendar interface to support Calendar views

==============================================================================
2024-06-24: v2.5.0

🐞 Fixes:
- AggregateReference<T>: Added ToString() override

🎨 Improvements:
- ICommandObject: Added generic overloads for Execute(TContext)

🎁 New features:
- Added non-generic AggregateReference, when references are to different Bounded Contexts
- Added IEntityReference and EntityReference (similar to IAggregateReference)

==============================================================================
2024-03-22: v2.4.0

⚠ Breaking changes
- IRepository: Moved LockAsync and UnlockAsync into IAggregateLockService

🎁 New features:
- IAggregateLockService: Added for upcoming feature

🐞 Fixes:
- Corrections to XML comments/docs

==============================================================================
2023-11-27: v2.3.0

🐞 Fixes:
- InMemoryRepository: Corrected generic constraint to match IRepository<T>
- InMemoryRepository: Now copes with null entries in collection
- IAggregateReference: Id doesn't need setter
- Correction in BaseEntity.Equals()

🎨 Improvements:
- Added EqualityExtensions, so that consumer can provide a Unique Key (for comparing persistent objects)
- Base classes now use EqualityExtensions
- IAudit now marked as IValueObject
- Updated property syntax

==============================================================================
2023-10-11: v2.2.2

⚠ Breaking changes: Updated to .NET 7

🎁 New features:
- Added IPagedFiltering<>
- Added ICommandObject

🐞 Fixes:
- InMemoryRepository now includes aggregateRoot in Save()
- Use async/await consistently
- IAggregateLock: Updated properties to simplify persistence
- Corrected comments
- IValueObject now has Id property, so it's easier to persist in an independent table

🎨 Improvements:
- AggregateRoot and IAggregateReference now use Interface default implementations, to make consumer code easier

==============================================================================

2023-05-08: v2.0.4

⚠ Breaking changes:
- IRepository<T> updated with async methods
- IQuerySpecification updated with async methods

🎁 New features:
- Added IAggregateReference<T> and AggregateReference<T> 

==============================================================================

2023-02-11: v1.3.0

🐞 Fixes:
- InMemoryRepository now has basic support for class hierarchies

==============================================================================
2023-01-31: v1.2.0

🎁 New features:
- Added IValueProvider, for use with DefaultValueAttribute

🐞 Fixes:
- InMemoryRepository now handles circular references

🎨 Improvements:
- Code clean up

💨 Other:
- Updated copyright notices

==============================================================================
2022-11-05: v1.1.1

🐞 Fixes:
- InMemoryRepository now returns copies of objects, so that object modifications don't affect the original items
- Assertion.Result can now be set by derived classes

==============================================================================
2022-09-01: v1.0.1 
	First public release
